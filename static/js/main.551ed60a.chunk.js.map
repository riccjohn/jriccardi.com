{"version":3,"sources":["Navigation.js","About.js","Contact.js","Projects.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","react_default","a","createElement","className","href","Icon_default","fontSize","About","id","Contact","target","rel","title","src","alt","Projects","App","src_Navigation","src_About","src_Projects","src_Contact","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6NAsBeA,EAnBI,WACjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,SACNJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAMK,SAAS,SAAf,SAEFN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,UAAUC,KAAK,UAA5B,SAGAJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,UAAUC,KAAK,SAA5B,QAGAJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,UAAUC,KAAK,YAA5B,aCFSG,EAXD,WACZ,OACEP,EAAAC,EAAAC,cAAA,OAAKM,GAAG,SACNR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,UAAK,0CCwBEO,EA7BC,WACd,OACET,EAAAC,EAAAC,cAAA,OAAKM,GAAG,WACNR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEbH,EAAAC,EAAAC,cAAA,KACEE,KAAK,8BACLM,OAAO,SACPC,IAAI,sBACJC,MAAM,SACNJ,GAAG,UAEHR,EAAAC,EAAAC,cAAA,OAAKW,IAAI,mBAAmBC,IAAI,YAElCd,EAAAC,EAAAC,cAAA,sBAAaF,EAAAC,EAAAC,cAAA,sBAAb,mBACAF,EAAAC,EAAAC,cAAA,KACEE,KAAK,4BACLM,OAAO,SACPC,IAAI,sBACJC,MAAM,QACNJ,GAAG,SAEHR,EAAAC,EAAAC,cAAA,OAAKW,IAAI,kBAAkBC,IAAI,cCkB1BC,EAxCE,WACf,OACEf,EAAAC,EAAAC,cAAA,OAAKM,GAAG,QACNR,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,YACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,mDACNJ,EAAAC,EAAAC,cAAA,OAAKM,GAAG,UAAUL,UAAU,WAC1BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,uBAAH,wCAMNH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,wCACNJ,EAAAC,EAAAC,cAAA,OAAKM,GAAG,SAASL,UAAU,WACzBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,UAAH,6CAMNH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,+GACNJ,EAAAC,EAAAC,cAAA,OAAKM,GAAG,aAAaL,UAAU,WAC7BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,yBAAH,yDCXCa,2LAXX,OACEhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACe,EAAD,MACAjB,EAAAC,EAAAC,cAACgB,EAAD,MACAlB,EAAAC,EAAAC,cAACiB,EAAD,MACAnB,EAAAC,EAAAC,cAACkB,EAAD,cAPUC,cCKEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5B,EAAAC,EAAAC,cAAC2B,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.551ed60a.chunk.js","sourcesContent":["import React from 'react';\nimport Icon from '@material-ui/core/Icon';\n\nconst Navigation = () => {\n  return (\n    <nav className=\"desktop flex\">\n      <a href=\"#home\">\n        <Icon fontSize=\"large\">code</Icon>\n      </a>\n      <a className=\"section\" href=\"#about\">\n        About\n      </a>\n      <a className=\"section\" href=\"#work\">\n        Work\n      </a>\n      <a className=\"section\" href=\"#contact\">\n        Contact\n      </a>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\n\nconst About = () => {\n  return (\n    <div id=\"about\">\n      <div className=\"container\">\n        <h1>John Riccardi</h1>\n        <h3>{'{ Developer + Designer + Animator }'}</h3>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nconst Contact = () => {\n  return (\n    <div id=\"contact\">\n      <div className=\"content\">\n\n        <a\n          href=\"https://github.com/riccjohn\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          title=\"Github\"\n          id=\"github\"\n        >\n          <img src=\"/github-icon.svg\" alt=\"github\" />\n        </a>\n        <p>Made with <span>â™¥</span> in Madison, WI</p>\n        <a\n          href=\"mailto:john@jriccardi.com\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          title=\"Email\"\n          id=\"email\"\n        >\n          <img src=\"/email-icon.svg\" alt=\"email\" />\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Contact;\n","import React from 'react';\n\nconst Projects = () => {\n  return (\n    <div id=\"work\">\n      <h1 className=\"button\">Projects</h1>\n      <div className=\"content\">\n        <a href='https://github.com/riccjohn/react-ui-animations'>\n          <div id=\"reactUi\" className=\"project\">\n            <div className=\"thumbnail\" />\n            <div className=\"description\">\n              <p><span className=\"title\">React-UI-Animations</span>\n                React component library, Anime.js\n              </p>\n            </div>\n          </div>\n        </a>\n        <a href='https://github.com/Hangry-App/Hangry'>\n          <div id=\"hangry\" className=\"project\">\n            <div className=\"thumbnail\" />\n            <div className=\"description\">\n              <p><span className=\"title\">Hangry</span>\n                React Native, Firebase, Foursquare API\n              </p>\n            </div>\n          </div>\n        </a>\n        <a href='https://medium.com/coinmonks/understanding-and-building-your-own-tiny-blockchain-in-javascript-a16f2137cfec'>\n          <div id=\"blockchain\" className=\"project\">\n            <div className=\"thumbnail\" />\n            <div className=\"description\">\n              <p><span className=\"title\">JS Blockchain Article</span>\n                Medium article, node.js, javascript, blockchain\n              </p>\n            </div>\n          </div>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;\n","import React, { Component } from 'react';\nimport Navigation from './Navigation';\nimport About from './About';\nimport Contact from './Contact';\nimport Projects from './Projects';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Navigation />\n        <About />\n        <Projects />\n        <Contact />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}